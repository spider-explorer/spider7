plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.+'
    id "com.github.mrsarm.jshell.plugin" version "1.2.1"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation project(":java17")
    //implementation 'com.github.up-language:up-java-lib:2023.0717.2349'
    implementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    implementation 'com.google.guava:guava:31.1-jre'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-cbor
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.14.2'
    // https://mvnrepository.com/artifact/com.upokecenter/cbor
    //implementation 'com.upokecenter:cbor:4.5.2'
    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation 'commons-cli:commons-cli:1.5.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-io
    //implementation 'org.apache.commons:commons-io:1.3.2'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-smile
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.14.2'
    // https://search.maven.org/artifact/com.amazon.ion/ion-java/1.9.5/jar?eh=
    implementation 'com.amazon.ion:ion-java:1.9.5'
    // https://mvnrepository.com/artifact/org.eclipse.swt/org.eclipse.swt.win32.win32.x86_64
    implementation 'org.eclipse.swt:org.eclipse.swt.win32.win32.x86_64:4.3'
}

mainClassName = 'global.Main'

//jar {
//    manifest {
//        attributes 'Main-Class': mainClassName
//    }
//}

//application {
//    mainClass = 'global.Main'
//    //mainClass = 'swt.test.MySwtApp'
//}

archivesBaseName = 'noname'

//tasks.named('test') {
//    useJUnitPlatform()
//}
test {
  // JUnit platform を使う設定
  useJUnitPlatform()
  testLogging {
    // テスト時の標準出力と標準エラー出力を表示する
    showStandardStreams true
    // イベントを出力する (TestLogEvent)
    events 'started', 'skipped', 'passed', 'failed'
    // 例外発生時の出力設定 (TestExceptionFormat)
    exceptionFormat 'full'
  }
}

task myRun(type: JavaExec) {
    group = 'application'
    classpath = files(shadowJar.archiveFile)
    main = 'global.Main'
    //main = 'swt.test.MySwtApp'
    args = ['arg1', 'arg2']
}
myRun.dependsOn shadowJar

File runningDir = new File('run/')
runningDir.mkdirs()
tasks.test.workingDir = runningDir
tasks.jshell.workingDir = runningDir
tasks.run.workingDir = runningDir
tasks.runShadow.workingDir = runningDir
tasks.myRun.workingDir = runningDir
